<Window x:Class="_2DAG_Designer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:_2DAG_Designer"
        mc:Ignorable="d"
        ResizeMode="CanResize"
        Title="2DAG Designer" Height="700" Width="1050" MinHeight="650" MinWidth="930" KeyDown="Window_KeyDown" Unloaded="Window_Unloaded" Loaded="Window_Loaded" SizeChanged="Window_SizeChanged">

    <Window.Resources>
        <Style TargetType="{x:Type Control}" x:Key="fontStyle">
            <Setter Property="FontFamily" Value="Helvetica" />
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource fontStyle}" >

        </Style>

        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource fontStyle}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="#64A6A8"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#64A6A8"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#64A6A8"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#4C8B8C"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#4C8B8C"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NoTriggerButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource fontStyle}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="#C0F0F0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource fontStyle}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="#BED7D7" BorderThickness="3" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="#9FD2D3 "/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="#64A6A8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Border}">
            <Setter Property="CornerRadius" Value="5" />
            <Setter Property="Background" Value="#DBE5E5" />
            <Setter Property="BorderBrush" Value="#BED7D7" />
            <Setter Property="BorderThickness" Value="3" />
        </Style>

    </Window.Resources>

    <StackPanel>

        <!--Menüleiste-->
        <DockPanel>
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="_Datei">
                    <MenuItem x:Name="MenuOpenFile" Header="_Öffnen"    Click="MenuOpenFile_Click">
                        <MenuItem.Icon>
                            <Image Source="Resources/openfile.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="MenuSaveFile" Header="_Speichern" Click="MenuSaveFile_Click" InputGestureText="Ctrl+S">
                        <MenuItem.Icon>
                            <Image Source="Resources/save.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="MenuSaveFileTo" Header="_Speichern unter" Click="MenuSaveFileTo_Click">
                        <MenuItem.Icon>
                            <Image Source="Resources/save.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>

                <MenuItem Header="_Hilfe">

                    <!--öffnen der Dokumentation des Programms-->
                    <MenuItem Header="_Dokumentation" Click="MenuItem_Click">
                        <MenuItem.Icon>
                            <Image Source="Resources/Word.ico" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
            </Menu>
            <StackPanel></StackPanel>
        </DockPanel>
        <!--__________________-->

        <Grid ShowGridLines="False" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="595" x:Name="DrawColumn" />
                <ColumnDefinition Width="200" />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="0.5*" />
                <RowDefinition Height="40"/>
                <RowDefinition Height="595" x:Name="DrawRow" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>


            <!--Grid für die Zeichenfeldlinien-->
            <Canvas  x:Name="DrawField" Background="LightCyan" Grid.Row="2" Grid.Column="1" >
                <Border x:Name="SelectedPointBorder" Grid.Column="1" Grid.Row="2" BorderThickness="1" Background="Transparent" Visibility="Hidden" BorderBrush="Black" Height="10" Width="10" CornerRadius="0"/>
            </Canvas>
           

            <!--Überdeckung für überstehende Objekte-->
            <Rectangle Grid.Row="0" Grid.Column="0" Fill="White" />
            <Rectangle Grid.Row="1" Grid.Column="0" Fill="White" />
            <Rectangle Grid.Row="2" Grid.Column="0" Fill="White" />
            <Rectangle Grid.Row="3" Grid.Column="0" Fill="White" />

            <Rectangle Grid.Row="0" Grid.Column="1" Fill="White" />
            <Rectangle Grid.Row="1" Grid.Column="1" Fill="White" />
            <Rectangle Grid.Row="3" Grid.Column="1" Fill="White" />

            <Rectangle Grid.Row="0" Grid.Column="2" Fill="White" />
            <Rectangle Grid.Row="1" Grid.Column="2" Fill="White" />
            <Rectangle Grid.Row="2" Grid.Column="2" Fill="White" />
            <Rectangle Grid.Row="3" Grid.Column="2" Fill="White" />

            <Rectangle Grid.Row="0" Grid.Column="3" Fill="White" />
            <Rectangle Grid.Row="1" Grid.Column="3" Fill="White" />
            <Rectangle Grid.Row="2" Grid.Column="3" Fill="White" />
            <Rectangle Grid.Row="3" Grid.Column="3" Fill="White" />


            <!--Vor und Zurück Buttons-->
            <Button x:Name="Reverse" Style="{StaticResource NoTriggerButtonStyle}" Height="40" Width="40" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" Margin="-40,0,0,0" Click="Reverse_Click" BorderBrush="{x:Null}"  >
                <Button.Background>
                    <ImageBrush ImageSource="Resources\reverseButton.png"/>
                </Button.Background>
            </Button>
            <Button x:Name="Redo" Style="{StaticResource NoTriggerButtonStyle}" Height="40" Width="40" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="40,0,0,0"  Click="Redo_Click" BorderBrush="{x:Null}" >
                <Button.Background>
                    <ImageBrush ImageSource="Resources\redoButton.png" TileMode="Tile"/>
                </Button.Background>
            </Button>
            <!---->

            <!--StackPanel für die Steuerung auf der linken Seite-->
            <StackPanel  Grid.Row="2" HorizontalAlignment="Center" >
                
                <!--Arduino-->
                <Border 
                    Margin="0 10"
                    Width="186">
                    
                    <StackPanel>
                        <Button x:Name="SearchPortsButton" Content="Ports suchen" Click="SearchPortsButton_Click" Margin="10" />
                        <Label x:Name="ComLabel" Content="Port auswählen" IsEnabled="False" Visibility="Visible" />

                        <ComboBox x:Name="AvailablePortsComboBox" IsEnabled="False" Visibility="Visible" Margin="10,0" />

                        <Button x:Name="ConnectComButton" Content="Verbinden" Margin="0 10" Width="75" Click="ConnectComButton_Click" IsEnabled="False" Visibility="Visible" />

                        <Button x:Name="ArduinoUploadButton" Content="Hochladen" Click="ArduinoUploadButton_Click" Margin="10,5" IsEnabled="False" Visibility="Visible" />

                        <Button x:Name="StartButton" Content="Starten" Margin="10 5" IsEnabled="False" Click="StartButton_Click"/>

                        <ProgressBar x:Name="BurnProgressBar" Visibility="Collapsed" Value="50" Height="12" Margin="10 5" />
                    </StackPanel>
                </Border>

                <Button x:Name="Schrittmotor" Visibility="Visible" Content="Schrittmotor" Click="Schrittmotor_Click" Margin="0 50" />

                <!--verschieben-->
                <Border>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Button x:Name="PreviousPointButton" Content="vorgeriger" HorizontalAlignment="Left" VerticalAlignment="Top" Click="PreviousPointButton_Click" />
                        <Button x:Name="NextPointButton" Content="nächster" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Column="1" Click="NextPointButton_Click"/>

                        <Button x:Name="MoveTop" Style="{StaticResource NoTriggerButtonStyle}"  Height="50" Width="50" Grid.Row="0" Grid.ColumnSpan="2"  Margin="10 10" Click="MoveTop_Click">
                            <Button.Background>
                                <ImageBrush ImageSource="Resources\arrow.png">
                                    <ImageBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                            <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                            <RotateTransform Angle="-90" CenterY="0.5" CenterX="0.5"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </ImageBrush.RelativeTransform>
                                </ImageBrush>
                            </Button.Background>
                        </Button>

                        <Button x:Name="MoveLeft" Style="{StaticResource NoTriggerButtonStyle}" Height="50" Width="50" Grid.Row="1" Margin="10 10" Click="MoveLeft_Click">
                            <Button.Background>
                                <ImageBrush ImageSource="Resources\arrow.png">
                                    <ImageBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                            <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                            <RotateTransform Angle="-180" CenterY="0.5" CenterX="0.5"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </ImageBrush.RelativeTransform>
                                </ImageBrush>
                            </Button.Background>
                        </Button>

                        <Button x:Name="MoveRight"  Height="50" Width="50" Style="{StaticResource NoTriggerButtonStyle}" Grid.Column="1" Grid.Row="1" Margin="10 10" Click="MoveRight_Click">
                            <Button.Background>
                                <ImageBrush ImageSource="Resources\arrow.png" />                            
                            </Button.Background>
                        </Button>

                        <Button x:Name="MoveBottom" Height="50" Width="50" Style="{StaticResource NoTriggerButtonStyle}" Grid.Row="2" Grid.ColumnSpan="2" Margin="10 10" Click="MoveBottom_Click">
                            <Button.Background>
                                <ImageBrush ImageSource="Resources\arrow.png">
                                    <ImageBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                            <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                            <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </ImageBrush.RelativeTransform>
                                </ImageBrush>
                            </Button.Background>
                        </Button>
                    </Grid>
                </Border>
            </StackPanel>


            <!--Zeichenfeld-->
            <Button x:Name="DrawArea"  
                    Grid.Column="1" Grid.Row="2" 
                    Click="DrawArea_Click"  
                    Style="{StaticResource NoTriggerButtonStyle}"
                    Opacity="0.2"/>


            <!--Canvas für die cm Bezeichnungen-->
            <Canvas x:Name="XLabelCanvas"  Grid.Row="1" Grid.Column="1" />
            <Canvas x:Name="YLabelCanvas" HorizontalAlignment="Right" Width="100" Grid.Row="2" Grid.Column="0" />


            <!--StackPanel für die Steuerung auf der rechten Seite-->
            <StackPanel Grid.Column="2"  Grid.Row="2" HorizontalAlignment="Left" Height="585"  VerticalAlignment="Top" Width="200" Orientation="Vertical">

                <!--Buttons zur Steuerung-->
                <Border Grid.Row="2" Grid.Column="2"   Margin="10 0">
                    <StackPanel >
                        <Button x:Name="DeleteAllButton" ToolTip="alles Löschen"    Content="delete ALL"   Margin="0 10"   Height="30" Width="100" Click="DeleteAllButton_Click"  />
                        <Button x:Name="DeleteButton"       Content="delete Last"  Margin="0 10"   Height="30" Width="100" Click="DeleteButton_Click" />
                    </StackPanel>
                </Border>
                <Border   Margin="10 5">
                    <Grid Margin="10 10">
                        <Grid.ColumnDefinitions >
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <CheckBox x:Name="DrawLineCheck"   Grid.Column="0" Content="gerade"    HorizontalAlignment="Center"      IsChecked="True"   Click="DrawLineCheck_Click" />
                        <CheckBox x:Name="DrawCircleCheck" Grid.Column="1"  Content="rund"     HorizontalAlignment="Center"                         Click="DrawCircleCheck_Click" Height="15" Margin="16,0" VerticalAlignment="Top" />
                    </Grid>
                </Border>

                <!--gerade/rund Checkboxen-->

                <!--Halbkreis erstellen-->
                <Border Grid.Row="2" Grid.Column="2"   Margin="10 0" >
                    <StackPanel>


                        <Border Margin="27, -3" Height="22">
                            <TextBlock FontFamily="Helvetica" Text="Kreis erstellen" TextAlignment="Center" HorizontalAlignment="Center" Width="120"  />
                        </Border>

                        <Label Height="23" Width="120" Content="Radius"  />
                        <TextBox x:Name="RadiusTextBox" Text=""  Height="23" Width="120" TextWrapping="Wrap"  HorizontalAlignment="Center" VerticalAlignment="Top" />

                        <Label  Height="23" Width="120" Content="Größe (in Grad)" Margin="0,0,0,0" />
                        <TextBox x:Name="CircleSizeTextBox" Text="" Height="23" Width="120" TextWrapping="Wrap"  HorizontalAlignment="Center" VerticalAlignment="Top"  />

                        <Label  Height="23" Width="120" Content="Rotation (in Grad)" Margin="0,0,0,0" />
                        <TextBox x:Name="StartAngleTextBox" Text="" Height="23" Width="120" TextWrapping="Wrap"  HorizontalAlignment="Center" VerticalAlignment="Top"  />
                        
                        <CheckBox x:Name="CircleInvertedCheckBox" Content="nach oben" HorizontalAlignment="Center" Margin="0 10" />

                        <Button x:Name="CreateArcButton" Content="erstellen" Margin="0 5" Width="70" Click="CreateArcButton_Click"/>
                    </StackPanel>
                </Border>

                <!-- Informationsanzeige-->
                <Border Grid.Row="2" Grid.Column="2"   Margin="10 5">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label x:Name="WidthLabel"  Grid.Column="0" Content="width" HorizontalAlignment="Left"  VerticalAlignment="Center" Margin="10,0,0,0" />
                            <Label x:Name="HeightLabel" Grid.Column="1" Content="height" HorizontalAlignment="Left"  VerticalAlignment="Center" Margin="10 0"  />
                        </StackPanel>

                        <Label x:Name="AngleLabel"  Grid.Row="1" Content="angle" HorizontalAlignment="Left"  VerticalAlignment="Top" Margin="10 0"/>

                    </StackPanel>
                </Border>

                <!--Wort einfügen-->
                <Border Grid.Row="2" Grid.Column="2"   Margin="10 0">
                    <StackPanel>
                        <Label Content="Wort einfügen:" HorizontalAlignment="Center" />
                        <TextBox x:Name="DrawLettersTextBox" Text="" Height="24" Width="120" TextWrapping="Wrap"  HorizontalAlignment="Center" VerticalAlignment="Top" />
                        <Button x:Name="ApplyTextButton" Grid.Row="1" Content="bestätigen" Width="70" Click="ApplyTextButton_Click" Margin="0 5"/>
                    </StackPanel>
                </Border>

                <!--Größe verändern-->
                <Border Grid.Row="2" Grid.Column="2" Margin="10 5">
                    <Grid Margin="10 0">
                        <Grid.RowDefinitions>
                            <RowDefinition  Height="*"/>
                            <RowDefinition  Height="*"/>
                        </Grid.RowDefinitions>

                        <Label Content="Größe verändern (%):" HorizontalAlignment="Left" Margin="0 0" />
                        <TextBox x:Name="ChangeSizeTextBox" Text="" Height="24" Width="45" HorizontalAlignment="Right" Margin="-7 3" />

                        <Button x:Name="ApplySizeChangeButton" Grid.Row="1" Content="bestätigen" Width="70" Margin="0 5" Click="ApplySizeChangeButton_Click"/>

                    </Grid>
                </Border>
                <!---->

            </StackPanel>



        </Grid>

    </StackPanel>
</Window>
